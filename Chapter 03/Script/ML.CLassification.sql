-- USE DATABASE
USE DATABASE CORTEX_AI_DB;

-- CREATE TRAIN AND TEST DATASETS
CREATE OR REPLACE TABLE CLASSIFY_TRAIN AS
SELECT * FROM TRANSACTIONS SAMPLE (80);

CREATE OR REPLACE TABLE CLASSIFY_TEST AS
SELECT * FROM TRANSACTIONS WHERE NOT EXISTS (
SELECT 1 FROM CLASSIFY_TRAIN WHERE
TRANSACTIONS.TRANSACTION_ID = CLASSIFY_TRAIN.TRANSACTION_ID);

-- Drop ID column from Train data
ALTER TABLE CLASSIFY_TRAIN DROP COLUMN TRANSACTION_ID;

-- CREATION OF ML CLASSIFIER
CREATE OR REPLACE SNOWFLAKE.ML.CLASSIFICATION FRAUD_DETECTION_MODEL(
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'CLASSIFY_TRAIN'),
    TARGET_COLNAME => 'FRAUDULENT'
);

-- CREATE A TABLE AND STORE THE PREDICTED OUTCOME FROM TEST DATA
CREATE OR REPLACE TABLE FRAUD_PREDICTION AS
SELECT * EXCLUDE (FRAUDULENT), FRAUD_DETECTION_MODEL!PREDICT(INPUT_DATA => object_construct(*))
as prediction from CLASSIFY_TEST;

-- PARSE THE PREDICTED RESULTS INTO SEPERATE COLUMNS
SELECT TRANSACTION_ID,AMOUNT, LOCATION, DEVICE_TYPE,
        prediction:class AS pred_class,
        round(prediction['probability'][prediction:class], 3) as probability
FROM FRAUD_PREDICTION;

-- INSPECT YOUR MODELS EVALUATION METRICS
CALL FRAUD_DETECTION_MODEL!SHOW_EVALUATION_METRICS();
CALL FRAUD_DETECTION_MODEL!SHOW_GLOBAL_EVALUATION_METRICS();


-- FEATURE IMPORTANCE  
CALL FRAUD_DETECTION_MODEL!SHOW_FEATURE_IMPORTANCE();