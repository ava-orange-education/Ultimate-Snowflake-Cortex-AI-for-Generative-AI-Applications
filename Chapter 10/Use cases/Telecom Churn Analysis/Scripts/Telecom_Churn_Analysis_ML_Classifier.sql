-- Database
USE DATABASE CORTEX_AI_DB;

-- -- Ensure that you have imported the data from Telecom_Churn_Analysis.csv to the TELECOM_CHURN table
SELECT * FROM TELECOM_CHURN;

--------------------Creating Train and Test Tables ------------------------------------
CREATE OR REPLACE TABLE TRAIN_DATA_TELECOM AS
SELECT * FROM CORTEX_AI_DB.PUBLIC.TELECOM_CHURN SAMPLE (80);
 
CREATE OR REPLACE TABLE CORTEX_AI_DB.PUBLIC.TEST_DATA_TELECOM 
AS
SELECT * FROM TELECOM_CHURN WHERE NOT EXISTS (
SELECT 1 FROM TRAIN_DATA_TELECOM WHERE
TELECOM_CHURN.CUSTOMER_ID = TRAIN_DATA_TELECOM.CUSTOMER_ID);
 

-- VERIFYING THE COUNT OF TRAIN AND TEST DATA AGAINST THE SOURCE TABLE
SELECT COUNT(*) FROM TELECOM_CHURN;

SELECT COUNT(*) FROM TRAIN_DATA_TELECOM
union all
SELECT COUNT(*) FROM TEST_DATA_TELECOM;
 

-- DROPPING UNUSED COLUMN IN TRAIN AND TARGET COLUMN IN TEST. CUSTOMER_ID IS NOT USED FOR TRAINING
ALTER TABLE TRAIN_DATA_TELECOM DROP COLUMN CUSTOMER_ID;
ALTER TABLE TEST_DATA_TELECOM DROP COLUMN CHURN_FLAG;
 
----------------------------------NATIVE CLASSIFIER CREATION--------------------------
-- CREATION OF ML CLASSIFIER
CREATE OR REPLACE SNOWFLAKE.ML.CLASSIFICATION TELECOM_CHURN_MODEL(
    INPUT_DATA => SYSTEM$REFERENCE('TABLE', 'TRAIN_DATA_TELECOM'),
    TARGET_COLNAME => 'CHURN_FLAG'
);
 
-- CREATE A TABLE AND STORE THE PREDICTED OUTCOME FROM TEST DATA
CREATE OR REPLACE TABLE TELECOM_CHURN_PREDICTION AS
SELECT *, TELECOM_CHURN_MODEL!PREDICT(INPUT_DATA => object_construct(*))
as prediction from TEST_DATA_TELECOM;

SELECT * FROM TELECOM_CHURN_PREDICTION;
 
-- PARSE THE PREDICTED RESULTS INTO SEPERATE COLUMNS
SELECT * EXCLUDE prediction,prediction:class AS pred_class,round(prediction['probability'][prediction:class], 3) as probability 
FROM TELECOM_CHURN_PREDICTION;

 
-- -- INSPECT YOUR MODELS EVALUATION METRICS
CALL TELECOM_CHURN_MODEL!SHOW_EVALUATION_METRICS();
 
 
-- FEATURE IMPORTANCE  
CALL TELECOM_CHURN_MODEL!SHOW_FEATURE_IMPORTANCE();
 